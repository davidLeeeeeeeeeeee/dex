// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: pb/data.proto

// protoc --go_out=. --go_opt=paths=source_relative db/data.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --------------------- 订单 & 状态相关 ---------------------
type OrderOp int32

const (
	OrderOp_ADD    OrderOp = 0
	OrderOp_REMOVE OrderOp = 1
)

// Enum value maps for OrderOp.
var (
	OrderOp_name = map[int32]string{
		0: "ADD",
		1: "REMOVE",
	}
	OrderOp_value = map[string]int32{
		"ADD":    0,
		"REMOVE": 1,
	}
)

func (x OrderOp) Enum() *OrderOp {
	p := new(OrderOp)
	*p = x
	return p
}

func (x OrderOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderOp) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_data_proto_enumTypes[0].Descriptor()
}

func (OrderOp) Type() protoreflect.EnumType {
	return &file_pb_data_proto_enumTypes[0]
}

func (x OrderOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderOp.Descriptor instead.
func (OrderOp) EnumDescriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{0}
}

type Status int32

const (
	Status_PENDING Status = 0
	Status_FAILED  Status = 1
	Status_SUCCEED Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "PENDING",
		1: "FAILED",
		2: "SUCCEED",
	}
	Status_value = map[string]int32{
		"PENDING": 0,
		"FAILED":  1,
		"SUCCEED": 2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_data_proto_enumTypes[1].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_pb_data_proto_enumTypes[1]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{1}
}

// --------------------- Token & Registry ---------------------
type Token struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`         // token地址，所有token都是平级，区别是系统token会有代码对它的地址做特殊处理，比如原生代币FB会把地址硬编码到代码里面
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`           // 例如 "USDT"、"MYT"等
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`               // 例如 "Tether USD"
	Owner         string                 `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`             // 拥有者地址，可做冻结等管理权限，如果等于 0x0 表示没有拥有者
	TotalSupply   string                 `protobuf:"bytes,5,opt,name=totalSupply,proto3" json:"totalSupply,omitempty"` // 发行总量
	CanMint       bool                   `protobuf:"varint,6,opt,name=canMint,proto3" json:"canMint,omitempty"`        // 是否可增发，销毁的话直接打入 0x0 地址即可，查询0x0也可查到被销毁的token数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Token) Reset() {
	*x = Token{}
	mi := &file_pb_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{0}
}

func (x *Token) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Token) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Token) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Token) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Token) GetTotalSupply() string {
	if x != nil {
		return x.TotalSupply
	}
	return ""
}

func (x *Token) GetCanMint() bool {
	if x != nil {
		return x.CanMint
	}
	return false
}

type TokenRegistry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tokens        map[string]*Token      `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenRegistry) Reset() {
	*x = TokenRegistry{}
	mi := &file_pb_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenRegistry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenRegistry) ProtoMessage() {}

func (x *TokenRegistry) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenRegistry.ProtoReflect.Descriptor instead.
func (*TokenRegistry) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{1}
}

func (x *TokenRegistry) GetTokens() map[string]*Token {
	if x != nil {
		return x.Tokens
	}
	return nil
}

// --------------------- 公共字段定义 ---------------------
type BaseMessage struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TxId           string                 `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`                                // 交易 ID 即hash
	FromAddress    string                 `protobuf:"bytes,2,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`           // 发起者地址
	ExecutedHeight uint64                 `protobuf:"varint,3,opt,name=executed_height,json=executedHeight,proto3" json:"executed_height,omitempty"` // 实际执行的区块高度
	PublicKey      string                 `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Signature      string                 `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"` // 签名
	Status         Status                 `protobuf:"varint,6,opt,name=status,proto3,enum=pb.Status" json:"status,omitempty"`
	Nonce          uint64                 `protobuf:"varint,7,opt,name=nonce,proto3" json:"nonce,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BaseMessage) Reset() {
	*x = BaseMessage{}
	mi := &file_pb_data_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseMessage) ProtoMessage() {}

func (x *BaseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseMessage.ProtoReflect.Descriptor instead.
func (*BaseMessage) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{2}
}

func (x *BaseMessage) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *BaseMessage) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *BaseMessage) GetExecutedHeight() uint64 {
	if x != nil {
		return x.ExecutedHeight
	}
	return 0
}

func (x *BaseMessage) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *BaseMessage) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *BaseMessage) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_PENDING
}

func (x *BaseMessage) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

// --------------------- 账户 & 区块信息 ---------------------
type Account struct {
	state           protoimpl.MessageState   `protogen:"open.v1"`
	Address         string                   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`                                                                             // 账户地址
	PublicKey       string                   `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`                                                        // 地址对应的公钥
	Nonce           uint64                   `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`                                                                                // 账户的操作序号
	Orders          []string                 `protobuf:"bytes,4,rep,name=orders,proto3" json:"orders,omitempty"`                                                                               // 未执行完的 order 状态的 hash 列表
	Balances        map[string]*TokenBalance `protobuf:"bytes,5,rep,name=balances,proto3" json:"balances,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // key为token地址
	ReceiveVotes    string                   `protobuf:"bytes,6,opt,name=receive_votes,json=receiveVotes,proto3" json:"receive_votes,omitempty"`                                               // 此账户收到的投票
	Candidate       string                   `protobuf:"bytes,7,opt,name=candidate,proto3" json:"candidate,omitempty"`                                                                         // 被此账户选举的人，一个账户只能同时选举一个人
	UnclaimedReward string                   `protobuf:"bytes,8,opt,name=unclaimed_reward,json=unclaimedReward,proto3" json:"unclaimed_reward,omitempty"`                                      // 累计但尚未领取的奖励
	LastAccReward   string                   `protobuf:"bytes,9,opt,name=last_acc_reward,json=lastAccReward,proto3" json:"last_acc_reward,omitempty"`                                          // 上次更新时的累积因子
	IsMiner         bool                     `protobuf:"varint,10,opt,name=is_miner,json=isMiner,proto3" json:"is_miner,omitempty"`                                                            // 是否正在参与共识挖矿
	Ip              string                   `protobuf:"bytes,11,opt,name=ip,proto3" json:"ip,omitempty"`
	Index           uint64                   `protobuf:"varint,12,opt,name=index,proto3" json:"index,omitempty"` // 每个矿工都有唯一的index，用于bitmap
	Code            string                   `protobuf:"bytes,13,opt,name=code,proto3" json:"code,omitempty"`    // 为后续合约功能保留字段
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Account) Reset() {
	*x = Account{}
	mi := &file_pb_data_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{3}
}

func (x *Account) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Account) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *Account) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *Account) GetOrders() []string {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *Account) GetBalances() map[string]*TokenBalance {
	if x != nil {
		return x.Balances
	}
	return nil
}

func (x *Account) GetReceiveVotes() string {
	if x != nil {
		return x.ReceiveVotes
	}
	return ""
}

func (x *Account) GetCandidate() string {
	if x != nil {
		return x.Candidate
	}
	return ""
}

func (x *Account) GetUnclaimedReward() string {
	if x != nil {
		return x.UnclaimedReward
	}
	return ""
}

func (x *Account) GetLastAccReward() string {
	if x != nil {
		return x.LastAccReward
	}
	return ""
}

func (x *Account) GetIsMiner() bool {
	if x != nil {
		return x.IsMiner
	}
	return false
}

func (x *Account) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Account) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Account) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type TokenBalance struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Balance                string                 `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`                                                               // 可用余额
	CandidateLockedBalance string                 `protobuf:"bytes,2,opt,name=candidate_locked_balance,json=candidateLockedBalance,proto3" json:"candidate_locked_balance,omitempty"` // 投票锁定余额
	MinerLockedBalance     string                 `protobuf:"bytes,3,opt,name=miner_locked_balance,json=minerLockedBalance,proto3" json:"miner_locked_balance,omitempty"`             // 共识挖矿锁定余额
	LiquidLockedBalance    string                 `protobuf:"bytes,4,opt,name=liquid_locked_balance,json=liquidLockedBalance,proto3" json:"liquid_locked_balance,omitempty"`          // 流动性挖矿锁定余额
	WitnessLockedBalance   string                 `protobuf:"bytes,5,opt,name=witness_locked_balance,json=witnessLockedBalance,proto3" json:"witness_locked_balance,omitempty"`       // 见证者挖矿锁定余额
	LeverageLockedBalance  string                 `protobuf:"bytes,6,opt,name=leverage_locked_balance,json=leverageLockedBalance,proto3" json:"leverage_locked_balance,omitempty"`    // 杠杆交易锁定余额
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *TokenBalance) Reset() {
	*x = TokenBalance{}
	mi := &file_pb_data_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenBalance) ProtoMessage() {}

func (x *TokenBalance) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenBalance.ProtoReflect.Descriptor instead.
func (*TokenBalance) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{4}
}

func (x *TokenBalance) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *TokenBalance) GetCandidateLockedBalance() string {
	if x != nil {
		return x.CandidateLockedBalance
	}
	return ""
}

func (x *TokenBalance) GetMinerLockedBalance() string {
	if x != nil {
		return x.MinerLockedBalance
	}
	return ""
}

func (x *TokenBalance) GetLiquidLockedBalance() string {
	if x != nil {
		return x.LiquidLockedBalance
	}
	return ""
}

func (x *TokenBalance) GetWitnessLockedBalance() string {
	if x != nil {
		return x.WitnessLockedBalance
	}
	return ""
}

func (x *TokenBalance) GetLeverageLockedBalance() string {
	if x != nil {
		return x.LeverageLockedBalance
	}
	return ""
}

type Block struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Height            uint64                 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	TxsHash           string                 `protobuf:"bytes,2,opt,name=txs_hash,json=txsHash,proto3" json:"txs_hash,omitempty"`
	BlockHash         string                 `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	PrevBlockHash     string                 `protobuf:"bytes,4,opt,name=prev_block_hash,json=prevBlockHash,proto3" json:"prev_block_hash,omitempty"`
	AccumulatedReward string                 `protobuf:"bytes,5,opt,name=accumulated_reward,json=accumulatedReward,proto3" json:"accumulated_reward,omitempty"` // 区块奖励累计因子
	BitMap            []byte                 `protobuf:"bytes,6,opt,name=bit_map,json=bitMap,proto3" json:"bit_map,omitempty"`                                  // 矿工在线位图
	MinerSignature    []byte                 `protobuf:"bytes,7,opt,name=miner_signature,json=minerSignature,proto3" json:"miner_signature,omitempty"`
	ShortTxs          []byte                 `protobuf:"bytes,8,opt,name=short_txs,json=shortTxs,proto3" json:"short_txs,omitempty"`
	Miner             string                 `protobuf:"bytes,9,opt,name=miner,proto3" json:"miner,omitempty"`
	Body              []*AnyTx               `protobuf:"bytes,10,rep,name=body,proto3" json:"body,omitempty"` // 全部交易
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Block) Reset() {
	*x = Block{}
	mi := &file_pb_data_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{5}
}

func (x *Block) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Block) GetTxsHash() string {
	if x != nil {
		return x.TxsHash
	}
	return ""
}

func (x *Block) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *Block) GetPrevBlockHash() string {
	if x != nil {
		return x.PrevBlockHash
	}
	return ""
}

func (x *Block) GetAccumulatedReward() string {
	if x != nil {
		return x.AccumulatedReward
	}
	return ""
}

func (x *Block) GetBitMap() []byte {
	if x != nil {
		return x.BitMap
	}
	return nil
}

func (x *Block) GetMinerSignature() []byte {
	if x != nil {
		return x.MinerSignature
	}
	return nil
}

func (x *Block) GetShortTxs() []byte {
	if x != nil {
		return x.ShortTxs
	}
	return nil
}

func (x *Block) GetMiner() string {
	if x != nil {
		return x.Miner
	}
	return ""
}

func (x *Block) GetBody() []*AnyTx {
	if x != nil {
		return x.Body
	}
	return nil
}

type RewordInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RewordInfo) Reset() {
	*x = RewordInfo{}
	mi := &file_pb_data_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RewordInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewordInfo) ProtoMessage() {}

func (x *RewordInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewordInfo.ProtoReflect.Descriptor instead.
func (*RewordInfo) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{6}
}

type OrderPriceIndex struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"` //占位符,不需要，主要是需要这个字段的key(pair:...|price:...|is_filled：...|order_id:...)来快速查询到价格区间内，还未完全成交（is_filled:false）的tx
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderPriceIndex) Reset() {
	*x = OrderPriceIndex{}
	mi := &file_pb_data_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderPriceIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPriceIndex) ProtoMessage() {}

func (x *OrderPriceIndex) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPriceIndex.ProtoReflect.Descriptor instead.
func (*OrderPriceIndex) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{7}
}

func (x *OrderPriceIndex) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type CandidateIndex struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"` // key(candidate:...|user:...)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CandidateIndex) Reset() {
	*x = CandidateIndex{}
	mi := &file_pb_data_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CandidateIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandidateIndex) ProtoMessage() {}

func (x *CandidateIndex) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandidateIndex.ProtoReflect.Descriptor instead.
func (*CandidateIndex) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{8}
}

func (x *CandidateIndex) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

// --------------------- 交易相关消息 ---------------------
type IssueTokenTx struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *BaseMessage           `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	TokenName     string                 `protobuf:"bytes,2,opt,name=token_name,json=tokenName,proto3" json:"token_name,omitempty"`
	TokenSymbol   string                 `protobuf:"bytes,3,opt,name=token_symbol,json=tokenSymbol,proto3" json:"token_symbol,omitempty"`
	TotalSupply   string                 `protobuf:"bytes,4,opt,name=total_supply,json=totalSupply,proto3" json:"total_supply,omitempty"`
	CanMint       bool                   `protobuf:"varint,5,opt,name=canMint,proto3" json:"canMint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssueTokenTx) Reset() {
	*x = IssueTokenTx{}
	mi := &file_pb_data_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssueTokenTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueTokenTx) ProtoMessage() {}

func (x *IssueTokenTx) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueTokenTx.ProtoReflect.Descriptor instead.
func (*IssueTokenTx) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{9}
}

func (x *IssueTokenTx) GetBase() *BaseMessage {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *IssueTokenTx) GetTokenName() string {
	if x != nil {
		return x.TokenName
	}
	return ""
}

func (x *IssueTokenTx) GetTokenSymbol() string {
	if x != nil {
		return x.TokenSymbol
	}
	return ""
}

func (x *IssueTokenTx) GetTotalSupply() string {
	if x != nil {
		return x.TotalSupply
	}
	return ""
}

func (x *IssueTokenTx) GetCanMint() bool {
	if x != nil {
		return x.CanMint
	}
	return false
}

type FreezeTx struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *BaseMessage           `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	TokenAddr     string                 `protobuf:"bytes,2,opt,name=token_addr,json=tokenAddr,proto3" json:"token_addr,omitempty"`
	TargetAddr    string                 `protobuf:"bytes,3,opt,name=target_addr,json=targetAddr,proto3" json:"target_addr,omitempty"`
	Freeze        bool                   `protobuf:"varint,4,opt,name=freeze,proto3" json:"freeze,omitempty"` // true 为冻结，false 为解冻
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FreezeTx) Reset() {
	*x = FreezeTx{}
	mi := &file_pb_data_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FreezeTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreezeTx) ProtoMessage() {}

func (x *FreezeTx) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreezeTx.ProtoReflect.Descriptor instead.
func (*FreezeTx) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{10}
}

func (x *FreezeTx) GetBase() *BaseMessage {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *FreezeTx) GetTokenAddr() string {
	if x != nil {
		return x.TokenAddr
	}
	return ""
}

func (x *FreezeTx) GetTargetAddr() string {
	if x != nil {
		return x.TargetAddr
	}
	return ""
}

func (x *FreezeTx) GetFreeze() bool {
	if x != nil {
		return x.Freeze
	}
	return false
}

type Transaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *BaseMessage           `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	To            string                 `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	TokenAddress  string                 `protobuf:"bytes,3,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"`
	Amount        string                 `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_pb_data_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{11}
}

func (x *Transaction) GetBase() *BaseMessage {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *Transaction) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Transaction) GetTokenAddress() string {
	if x != nil {
		return x.TokenAddress
	}
	return ""
}

func (x *Transaction) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type OrderTx struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *BaseMessage           `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	BaseToken     string                 `protobuf:"bytes,2,opt,name=base_token,json=baseToken,proto3" json:"base_token,omitempty"`      // 例如 "bc1q6156"代表USDT
	QuoteToken    string                 `protobuf:"bytes,3,opt,name=quote_token,json=quoteToken,proto3" json:"quote_token,omitempty"`   // 例如 "bc1q0000"代表BTC
	Op            OrderOp                `protobuf:"varint,4,opt,name=op,proto3,enum=pb.OrderOp" json:"op,omitempty"`                    // ADD是更新订单状态REMOVE是撤单，买单和买单是按base_token和quote_token来决定的。比如买BTC，那么base_token=USDT的地址,quote_token=BTC的地址
	OpTargetId    string                 `protobuf:"bytes,5,opt,name=op_target_id,json=opTargetId,proto3" json:"op_target_id,omitempty"` // 如果要更新/移除订单id
	Amount        string                 `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Price         string                 `protobuf:"bytes,7,opt,name=price,proto3" json:"price,omitempty"`
	FilledBase    string                 `protobuf:"bytes,8,opt,name=filled_base,json=filledBase,proto3" json:"filled_base,omitempty"`    // 表示该订单已经成交的base数量
	FilledQuote   string                 `protobuf:"bytes,9,opt,name=filled_quote,json=filledQuote,proto3" json:"filled_quote,omitempty"` // 表示该订单已经成交的quote数量
	IsFilled      bool                   `protobuf:"varint,10,opt,name=is_filled,json=isFilled,proto3" json:"is_filled,omitempty"`        // 是否已经完全成交标签
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderTx) Reset() {
	*x = OrderTx{}
	mi := &file_pb_data_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderTx) ProtoMessage() {}

func (x *OrderTx) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderTx.ProtoReflect.Descriptor instead.
func (*OrderTx) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{12}
}

func (x *OrderTx) GetBase() *BaseMessage {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *OrderTx) GetBaseToken() string {
	if x != nil {
		return x.BaseToken
	}
	return ""
}

func (x *OrderTx) GetQuoteToken() string {
	if x != nil {
		return x.QuoteToken
	}
	return ""
}

func (x *OrderTx) GetOp() OrderOp {
	if x != nil {
		return x.Op
	}
	return OrderOp_ADD
}

func (x *OrderTx) GetOpTargetId() string {
	if x != nil {
		return x.OpTargetId
	}
	return ""
}

func (x *OrderTx) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *OrderTx) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *OrderTx) GetFilledBase() string {
	if x != nil {
		return x.FilledBase
	}
	return ""
}

func (x *OrderTx) GetFilledQuote() string {
	if x != nil {
		return x.FilledQuote
	}
	return ""
}

func (x *OrderTx) GetIsFilled() bool {
	if x != nil {
		return x.IsFilled
	}
	return false
}

type RechargeTx struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Base         *BaseMessage           `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	TokenAddress string                 `protobuf:"bytes,2,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"` //对应本链的哪个资产
	// 这个字段在打包区块的时候生成，用户直接通过区块链浏览器查询即可
	GeneratedAddress string `protobuf:"bytes,3,opt,name=generated_address,json=generatedAddress,proto3" json:"generated_address,omitempty"` //生成的聚合地址，如果是btc就直接用，如果是其他链就对应其合约内的所有者字段
	Tweak            string `protobuf:"bytes,4,opt,name=tweak,proto3" json:"tweak,omitempty"`                                               //在钱包端，生成地址的时候记录下来，
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RechargeTx) Reset() {
	*x = RechargeTx{}
	mi := &file_pb_data_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RechargeTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RechargeTx) ProtoMessage() {}

func (x *RechargeTx) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RechargeTx.ProtoReflect.Descriptor instead.
func (*RechargeTx) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{13}
}

func (x *RechargeTx) GetBase() *BaseMessage {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *RechargeTx) GetTokenAddress() string {
	if x != nil {
		return x.TokenAddress
	}
	return ""
}

func (x *RechargeTx) GetGeneratedAddress() string {
	if x != nil {
		return x.GeneratedAddress
	}
	return ""
}

func (x *RechargeTx) GetTweak() string {
	if x != nil {
		return x.Tweak
	}
	return ""
}

type CandidateTx struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Base             *BaseMessage           `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Op               OrderOp                `protobuf:"varint,2,opt,name=op,proto3,enum=pb.OrderOp" json:"op,omitempty"`
	CandidateAddress string                 `protobuf:"bytes,3,opt,name=candidate_address,json=candidateAddress,proto3" json:"candidate_address,omitempty"`
	Amount           string                 `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CandidateTx) Reset() {
	*x = CandidateTx{}
	mi := &file_pb_data_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CandidateTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandidateTx) ProtoMessage() {}

func (x *CandidateTx) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandidateTx.ProtoReflect.Descriptor instead.
func (*CandidateTx) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{14}
}

func (x *CandidateTx) GetBase() *BaseMessage {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CandidateTx) GetOp() OrderOp {
	if x != nil {
		return x.Op
	}
	return OrderOp_ADD
}

func (x *CandidateTx) GetCandidateAddress() string {
	if x != nil {
		return x.CandidateAddress
	}
	return ""
}

func (x *CandidateTx) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type MinerTx struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *BaseMessage           `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Op            OrderOp                `protobuf:"varint,2,opt,name=op,proto3,enum=pb.OrderOp" json:"op,omitempty"` //如果是ADD，则会直接把is_miner置为true,miner_locked_balance会被amount累加。
	Amount        string                 `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`          // 如果是REMOVE不需要传这个参数，is_miner置为false,miner_locked_balance的值直接累加到TokenBalance.balance,miner_locked_balance置0
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MinerTx) Reset() {
	*x = MinerTx{}
	mi := &file_pb_data_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MinerTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerTx) ProtoMessage() {}

func (x *MinerTx) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerTx.ProtoReflect.Descriptor instead.
func (*MinerTx) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{15}
}

func (x *MinerTx) GetBase() *BaseMessage {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *MinerTx) GetOp() OrderOp {
	if x != nil {
		return x.Op
	}
	return OrderOp_ADD
}

func (x *MinerTx) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

// 用 oneof 封装各种 Tx
type AnyTx struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Content:
	//
	//	*AnyTx_IssueTokenTx
	//	*AnyTx_FreezeTx
	//	*AnyTx_Transaction
	//	*AnyTx_OrderTx
	//	*AnyTx_AddressTx
	//	*AnyTx_CandidateTx
	//	*AnyTx_MinerTx
	Content       isAnyTx_Content `protobuf_oneof:"content"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnyTx) Reset() {
	*x = AnyTx{}
	mi := &file_pb_data_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnyTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyTx) ProtoMessage() {}

func (x *AnyTx) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyTx.ProtoReflect.Descriptor instead.
func (*AnyTx) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{16}
}

func (x *AnyTx) GetContent() isAnyTx_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *AnyTx) GetIssueTokenTx() *IssueTokenTx {
	if x != nil {
		if x, ok := x.Content.(*AnyTx_IssueTokenTx); ok {
			return x.IssueTokenTx
		}
	}
	return nil
}

func (x *AnyTx) GetFreezeTx() *FreezeTx {
	if x != nil {
		if x, ok := x.Content.(*AnyTx_FreezeTx); ok {
			return x.FreezeTx
		}
	}
	return nil
}

func (x *AnyTx) GetTransaction() *Transaction {
	if x != nil {
		if x, ok := x.Content.(*AnyTx_Transaction); ok {
			return x.Transaction
		}
	}
	return nil
}

func (x *AnyTx) GetOrderTx() *OrderTx {
	if x != nil {
		if x, ok := x.Content.(*AnyTx_OrderTx); ok {
			return x.OrderTx
		}
	}
	return nil
}

func (x *AnyTx) GetAddressTx() *RechargeTx {
	if x != nil {
		if x, ok := x.Content.(*AnyTx_AddressTx); ok {
			return x.AddressTx
		}
	}
	return nil
}

func (x *AnyTx) GetCandidateTx() *CandidateTx {
	if x != nil {
		if x, ok := x.Content.(*AnyTx_CandidateTx); ok {
			return x.CandidateTx
		}
	}
	return nil
}

func (x *AnyTx) GetMinerTx() *MinerTx {
	if x != nil {
		if x, ok := x.Content.(*AnyTx_MinerTx); ok {
			return x.MinerTx
		}
	}
	return nil
}

type isAnyTx_Content interface {
	isAnyTx_Content()
}

type AnyTx_IssueTokenTx struct {
	IssueTokenTx *IssueTokenTx `protobuf:"bytes,1,opt,name=issue_token_tx,json=issueTokenTx,proto3,oneof"`
}

type AnyTx_FreezeTx struct {
	FreezeTx *FreezeTx `protobuf:"bytes,2,opt,name=freeze_tx,json=freezeTx,proto3,oneof"`
}

type AnyTx_Transaction struct {
	Transaction *Transaction `protobuf:"bytes,3,opt,name=transaction,proto3,oneof"`
}

type AnyTx_OrderTx struct {
	OrderTx *OrderTx `protobuf:"bytes,4,opt,name=order_tx,json=orderTx,proto3,oneof"`
}

type AnyTx_AddressTx struct {
	AddressTx *RechargeTx `protobuf:"bytes,5,opt,name=address_tx,json=addressTx,proto3,oneof"`
}

type AnyTx_CandidateTx struct {
	CandidateTx *CandidateTx `protobuf:"bytes,6,opt,name=candidate_tx,json=candidateTx,proto3,oneof"`
}

type AnyTx_MinerTx struct {
	MinerTx *MinerTx `protobuf:"bytes,8,opt,name=miner_tx,json=minerTx,proto3,oneof"`
}

func (*AnyTx_IssueTokenTx) isAnyTx_Content() {}

func (*AnyTx_FreezeTx) isAnyTx_Content() {}

func (*AnyTx_Transaction) isAnyTx_Content() {}

func (*AnyTx_OrderTx) isAnyTx_Content() {}

func (*AnyTx_AddressTx) isAnyTx_Content() {}

func (*AnyTx_CandidateTx) isAnyTx_Content() {}

func (*AnyTx_MinerTx) isAnyTx_Content() {}

// --------------------- 节点==客户端信息 ---------------------
type NodeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PublicKey     string                 `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Ip            string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	IsOnline      bool                   `protobuf:"varint,4,opt,name=isOnline,proto3" json:"isOnline,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	mi := &file_pb_data_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{17}
}

func (x *NodeInfo) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *NodeInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *NodeInfo) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

type NodeList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*NodeInfo            `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeList) Reset() {
	*x = NodeList{}
	mi := &file_pb_data_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeList) ProtoMessage() {}

func (x *NodeList) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeList.ProtoReflect.Descriptor instead.
func (*NodeList) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{18}
}

func (x *NodeList) GetNodes() []*NodeInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type ClientInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            string                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Authed        bool                   `protobuf:"varint,2,opt,name=authed,proto3" json:"authed,omitempty"`
	PublicKeyPem  string                 `protobuf:"bytes,3,opt,name=public_key_pem,json=publicKeyPem,proto3" json:"public_key_pem,omitempty"` // 假设以 PEM 格式存储公钥，也可以存其它形式
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientInfo) Reset() {
	*x = ClientInfo{}
	mi := &file_pb_data_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInfo) ProtoMessage() {}

func (x *ClientInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInfo.ProtoReflect.Descriptor instead.
func (*ClientInfo) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{19}
}

func (x *ClientInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ClientInfo) GetAuthed() bool {
	if x != nil {
		return x.Authed
	}
	return false
}

func (x *ClientInfo) GetPublicKeyPem() string {
	if x != nil {
		return x.PublicKeyPem
	}
	return ""
}

// --------------------- Handshake & 状态请求 ---------------------
type HandshakeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`    // 就是矿工地址
	PublicKey     string                 `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"` // PEM
	Signature     string                 `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandshakeRequest) Reset() {
	*x = HandshakeRequest{}
	mi := &file_pb_data_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandshakeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeRequest) ProtoMessage() {}

func (x *HandshakeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeRequest.ProtoReflect.Descriptor instead.
func (*HandshakeRequest) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{20}
}

func (x *HandshakeRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *HandshakeRequest) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *HandshakeRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type HandshakeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "handshake_ok" 或其它
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandshakeResponse) Reset() {
	*x = HandshakeResponse{}
	mi := &file_pb_data_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandshakeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeResponse) ProtoMessage() {}

func (x *HandshakeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeResponse.ProtoReflect.Descriptor instead.
func (*HandshakeResponse) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{21}
}

func (x *HandshakeResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type StatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"` // 请求方地址
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	mi := &file_pb_data_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{22}
}

func (x *StatusRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type StatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "ok"
	Info          string                 `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`     // "Server is running"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_pb_data_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{23}
}

func (x *StatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StatusResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

// 用于请求完整交易数据
type GetData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxId          string                 `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"` // 请求方地址
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetData) Reset() {
	*x = GetData{}
	mi := &file_pb_data_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetData) ProtoMessage() {}

func (x *GetData) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetData.ProtoReflect.Descriptor instead.
func (*GetData) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{24}
}

func (x *GetData) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *GetData) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetBlockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Height        uint64                 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"` // 想要获取哪个高度的区块
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlockRequest) Reset() {
	*x = GetBlockRequest{}
	mi := &file_pb_data_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockRequest) ProtoMessage() {}

func (x *GetBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockRequest.ProtoReflect.Descriptor instead.
func (*GetBlockRequest) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{25}
}

func (x *GetBlockRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type GetBlockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Block         *Block                 `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"` // 若成功，则返回完整区块
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"` // 若出错，把错误信息返回给请求方
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlockResponse) Reset() {
	*x = GetBlockResponse{}
	mi := &file_pb_data_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockResponse) ProtoMessage() {}

func (x *GetBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockResponse.ProtoReflect.Descriptor instead.
func (*GetBlockResponse) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{26}
}

func (x *GetBlockResponse) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *GetBlockResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type BatchGetShortTxRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShortHashes   [][]byte               `protobuf:"bytes,1,rep,name=short_hashes,json=shortHashes,proto3" json:"short_hashes,omitempty"` // 每个 8 字节的短 hash
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`                            // 请求方地址
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetShortTxRequest) Reset() {
	*x = BatchGetShortTxRequest{}
	mi := &file_pb_data_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetShortTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetShortTxRequest) ProtoMessage() {}

func (x *BatchGetShortTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetShortTxRequest.ProtoReflect.Descriptor instead.
func (*BatchGetShortTxRequest) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{27}
}

func (x *BatchGetShortTxRequest) GetShortHashes() [][]byte {
	if x != nil {
		return x.ShortHashes
	}
	return nil
}

func (x *BatchGetShortTxRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type BatchGetShortTxResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transactions  []*AnyTx               `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetShortTxResponse) Reset() {
	*x = BatchGetShortTxResponse{}
	mi := &file_pb_data_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetShortTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetShortTxResponse) ProtoMessage() {}

func (x *BatchGetShortTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetShortTxResponse.ProtoReflect.Descriptor instead.
func (*BatchGetShortTxResponse) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{28}
}

func (x *BatchGetShortTxResponse) GetTransactions() []*AnyTx {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type CheckPointInfo struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Height             uint64                 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	TxsHash            string                 `protobuf:"bytes,2,opt,name=txs_hash,json=txsHash,proto3" json:"txs_hash,omitempty"`
	AggregateSignature []byte                 `protobuf:"bytes,3,opt,name=aggregate_signature,json=aggregateSignature,proto3" json:"aggregate_signature,omitempty"`
	BitMap             []byte                 `protobuf:"bytes,4,opt,name=bit_map,json=bitMap,proto3" json:"bit_map,omitempty"`
	Txs                []byte                 `protobuf:"bytes,5,opt,name=txs,proto3" json:"txs,omitempty"` // 所有交易的简短tx_hash
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CheckPointInfo) Reset() {
	*x = CheckPointInfo{}
	mi := &file_pb_data_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckPointInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPointInfo) ProtoMessage() {}

func (x *CheckPointInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPointInfo.ProtoReflect.Descriptor instead.
func (*CheckPointInfo) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{29}
}

func (x *CheckPointInfo) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *CheckPointInfo) GetTxsHash() string {
	if x != nil {
		return x.TxsHash
	}
	return ""
}

func (x *CheckPointInfo) GetAggregateSignature() []byte {
	if x != nil {
		return x.AggregateSignature
	}
	return nil
}

func (x *CheckPointInfo) GetBitMap() []byte {
	if x != nil {
		return x.BitMap
	}
	return nil
}

func (x *CheckPointInfo) GetTxs() []byte {
	if x != nil {
		return x.Txs
	}
	return nil
}

// 拉取共识状态的请求（目前为空，可扩展）
type GetConsensusStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConsensusStateRequest) Reset() {
	*x = GetConsensusStateRequest{}
	mi := &file_pb_data_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConsensusStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConsensusStateRequest) ProtoMessage() {}

func (x *GetConsensusStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConsensusStateRequest.ProtoReflect.Descriptor instead.
func (*GetConsensusStateRequest) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{30}
}

// ---------------- Snowman networking ----------------
type PushQuery struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	RequestId uint32                 `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Address   string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// Timeout (ns) for this request
	Deadline         uint64 `protobuf:"varint,3,opt,name=deadline,proto3" json:"deadline,omitempty"`
	ContainerIsBlock bool   `protobuf:"varint,4,opt,name=container_is_block,json=containerIsBlock,proto3" json:"container_is_block,omitempty"` // 为true表示是完整数据，false表示只有txs
	Container        []byte `protobuf:"bytes,5,opt,name=container,proto3" json:"container,omitempty"`                                          // 当tx数量小于2500时候，该字段为所有交易的完整二进制数据，>=2500的时候为 所有交易的简短tx_hash
	// Requesting peer's last accepted height
	RequestedHeight uint64 `protobuf:"varint,6,opt,name=requested_height,json=requestedHeight,proto3" json:"requested_height,omitempty"`
	BlockId         string `protobuf:"bytes,7,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Signature       []byte `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"` // TODO：消息签名
	Nonce           uint64 `protobuf:"varint,9,opt,name=nonce,proto3" json:"nonce,omitempty"`        // TODO：防重放攻击
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PushQuery) Reset() {
	*x = PushQuery{}
	mi := &file_pb_data_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushQuery) ProtoMessage() {}

func (x *PushQuery) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushQuery.ProtoReflect.Descriptor instead.
func (*PushQuery) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{31}
}

func (x *PushQuery) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *PushQuery) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PushQuery) GetDeadline() uint64 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

func (x *PushQuery) GetContainerIsBlock() bool {
	if x != nil {
		return x.ContainerIsBlock
	}
	return false
}

func (x *PushQuery) GetContainer() []byte {
	if x != nil {
		return x.Container
	}
	return nil
}

func (x *PushQuery) GetRequestedHeight() uint64 {
	if x != nil {
		return x.RequestedHeight
	}
	return 0
}

func (x *PushQuery) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *PushQuery) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *PushQuery) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

// PullQuery requests the preferences of a remote peer given a container id.
//
// Remote peers should respond to a PullQuery with a Chits message
type PullQuery struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	RequestId uint32                 `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Address   string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// Timeout (ns) for this request
	Deadline uint64 `protobuf:"varint,3,opt,name=deadline,proto3" json:"deadline,omitempty"`
	// Container id being gossiped
	BlockId string `protobuf:"bytes,4,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	// Requesting peer's last accepted height
	RequestedHeight uint64 `protobuf:"varint,5,opt,name=requested_height,json=requestedHeight,proto3" json:"requested_height,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PullQuery) Reset() {
	*x = PullQuery{}
	mi := &file_pb_data_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullQuery) ProtoMessage() {}

func (x *PullQuery) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullQuery.ProtoReflect.Descriptor instead.
func (*PullQuery) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{32}
}

func (x *PullQuery) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *PullQuery) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PullQuery) GetDeadline() uint64 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

func (x *PullQuery) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *PullQuery) GetRequestedHeight() uint64 {
	if x != nil {
		return x.RequestedHeight
	}
	return 0
}

// Chits contains the preferences of a peer in response to a PushQuery or
// PullQuery message.
type Chits struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	RequestId uint32                 `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Address   string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// ID of the currently preferred block
	PreferredBlock string `protobuf:"bytes,3,opt,name=preferred_block,json=preferredBlock,proto3" json:"preferred_block,omitempty"`
	// ID of the last accepted block
	AcceptedBlock string `protobuf:"bytes,4,opt,name=accepted_block,json=acceptedBlock,proto3" json:"accepted_block,omitempty"`
	// ID of the currently preferred block at the requested height
	PreferredBlockAtHeight uint64 `protobuf:"varint,5,opt,name=preferred_block_at_height,json=preferredBlockAtHeight,proto3" json:"preferred_block_at_height,omitempty"`
	// Last accepted block's height
	AcceptedHeight uint64 `protobuf:"varint,6,opt,name=accepted_height,json=acceptedHeight,proto3" json:"accepted_height,omitempty"`
	Bitmap         []byte `protobuf:"bytes,7,opt,name=bitmap,proto3" json:"bitmap,omitempty"` //上一个区块与自己联系过的节点
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Chits) Reset() {
	*x = Chits{}
	mi := &file_pb_data_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chits) ProtoMessage() {}

func (x *Chits) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chits.ProtoReflect.Descriptor instead.
func (*Chits) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{33}
}

func (x *Chits) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *Chits) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Chits) GetPreferredBlock() string {
	if x != nil {
		return x.PreferredBlock
	}
	return ""
}

func (x *Chits) GetAcceptedBlock() string {
	if x != nil {
		return x.AcceptedBlock
	}
	return ""
}

func (x *Chits) GetPreferredBlockAtHeight() uint64 {
	if x != nil {
		return x.PreferredBlockAtHeight
	}
	return 0
}

func (x *Chits) GetAcceptedHeight() uint64 {
	if x != nil {
		return x.AcceptedHeight
	}
	return 0
}

func (x *Chits) GetBitmap() []byte {
	if x != nil {
		return x.Bitmap
	}
	return nil
}

type HeightResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	LastAcceptedHeight uint64                 `protobuf:"varint,1,opt,name=LastAcceptedHeight,proto3" json:"LastAcceptedHeight,omitempty"`
	CurrentHeight      uint64                 `protobuf:"varint,2,opt,name=CurrentHeight,proto3" json:"CurrentHeight,omitempty"`
	Address            string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"` // 响应方地址
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *HeightResponse) Reset() {
	*x = HeightResponse{}
	mi := &file_pb_data_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeightResponse) ProtoMessage() {}

func (x *HeightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeightResponse.ProtoReflect.Descriptor instead.
func (*HeightResponse) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{34}
}

func (x *HeightResponse) GetLastAcceptedHeight() uint64 {
	if x != nil {
		return x.LastAcceptedHeight
	}
	return 0
}

func (x *HeightResponse) GetCurrentHeight() uint64 {
	if x != nil {
		return x.CurrentHeight
	}
	return 0
}

func (x *HeightResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetBlockByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockId       string                 `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlockByIDRequest) Reset() {
	*x = GetBlockByIDRequest{}
	mi := &file_pb_data_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockByIDRequest) ProtoMessage() {}

func (x *GetBlockByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_data_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockByIDRequest.ProtoReflect.Descriptor instead.
func (*GetBlockByIDRequest) Descriptor() ([]byte, []int) {
	return file_pb_data_proto_rawDescGZIP(), []int{35}
}

func (x *GetBlockByIDRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

var File_pb_data_proto protoreflect.FileDescriptor

const file_pb_data_proto_rawDesc = "" +
	"\n" +
	"\rpb/data.proto\x12\x02pb\"\x9f\x01\n" +
	"\x05Token\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x14\n" +
	"\x05owner\x18\x04 \x01(\tR\x05owner\x12 \n" +
	"\vtotalSupply\x18\x05 \x01(\tR\vtotalSupply\x12\x18\n" +
	"\acanMint\x18\x06 \x01(\bR\acanMint\"\x8c\x01\n" +
	"\rTokenRegistry\x125\n" +
	"\x06tokens\x18\x01 \x03(\v2\x1d.pb.TokenRegistry.TokensEntryR\x06tokens\x1aD\n" +
	"\vTokensEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x1f\n" +
	"\x05value\x18\x02 \x01(\v2\t.pb.TokenR\x05value:\x028\x01\"\xe5\x01\n" +
	"\vBaseMessage\x12\x13\n" +
	"\x05tx_id\x18\x01 \x01(\tR\x04txId\x12!\n" +
	"\ffrom_address\x18\x02 \x01(\tR\vfromAddress\x12'\n" +
	"\x0fexecuted_height\x18\x03 \x01(\x04R\x0eexecutedHeight\x12\x1d\n" +
	"\n" +
	"public_key\x18\x04 \x01(\tR\tpublicKey\x12\x1c\n" +
	"\tsignature\x18\x05 \x01(\tR\tsignature\x12\"\n" +
	"\x06status\x18\x06 \x01(\x0e2\n" +
	".pb.StatusR\x06status\x12\x14\n" +
	"\x05nonce\x18\a \x01(\x04R\x05nonce\"\xe1\x03\n" +
	"\aAccount\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x1d\n" +
	"\n" +
	"public_key\x18\x02 \x01(\tR\tpublicKey\x12\x14\n" +
	"\x05nonce\x18\x03 \x01(\x04R\x05nonce\x12\x16\n" +
	"\x06orders\x18\x04 \x03(\tR\x06orders\x125\n" +
	"\bbalances\x18\x05 \x03(\v2\x19.pb.Account.BalancesEntryR\bbalances\x12#\n" +
	"\rreceive_votes\x18\x06 \x01(\tR\freceiveVotes\x12\x1c\n" +
	"\tcandidate\x18\a \x01(\tR\tcandidate\x12)\n" +
	"\x10unclaimed_reward\x18\b \x01(\tR\x0funclaimedReward\x12&\n" +
	"\x0flast_acc_reward\x18\t \x01(\tR\rlastAccReward\x12\x19\n" +
	"\bis_miner\x18\n" +
	" \x01(\bR\aisMiner\x12\x0e\n" +
	"\x02ip\x18\v \x01(\tR\x02ip\x12\x14\n" +
	"\x05index\x18\f \x01(\x04R\x05index\x12\x12\n" +
	"\x04code\x18\r \x01(\tR\x04code\x1aM\n" +
	"\rBalancesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12&\n" +
	"\x05value\x18\x02 \x01(\v2\x10.pb.TokenBalanceR\x05value:\x028\x01\"\xb6\x02\n" +
	"\fTokenBalance\x12\x18\n" +
	"\abalance\x18\x01 \x01(\tR\abalance\x128\n" +
	"\x18candidate_locked_balance\x18\x02 \x01(\tR\x16candidateLockedBalance\x120\n" +
	"\x14miner_locked_balance\x18\x03 \x01(\tR\x12minerLockedBalance\x122\n" +
	"\x15liquid_locked_balance\x18\x04 \x01(\tR\x13liquidLockedBalance\x124\n" +
	"\x16witness_locked_balance\x18\x05 \x01(\tR\x14witnessLockedBalance\x126\n" +
	"\x17leverage_locked_balance\x18\x06 \x01(\tR\x15leverageLockedBalance\"\xc4\x02\n" +
	"\x05Block\x12\x16\n" +
	"\x06height\x18\x01 \x01(\x04R\x06height\x12\x19\n" +
	"\btxs_hash\x18\x02 \x01(\tR\atxsHash\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x03 \x01(\tR\tblockHash\x12&\n" +
	"\x0fprev_block_hash\x18\x04 \x01(\tR\rprevBlockHash\x12-\n" +
	"\x12accumulated_reward\x18\x05 \x01(\tR\x11accumulatedReward\x12\x17\n" +
	"\abit_map\x18\x06 \x01(\fR\x06bitMap\x12'\n" +
	"\x0fminer_signature\x18\a \x01(\fR\x0eminerSignature\x12\x1b\n" +
	"\tshort_txs\x18\b \x01(\fR\bshortTxs\x12\x14\n" +
	"\x05miner\x18\t \x01(\tR\x05miner\x12\x1d\n" +
	"\x04body\x18\n" +
	" \x03(\v2\t.pb.AnyTxR\x04body\"\f\n" +
	"\n" +
	"RewordInfo\"!\n" +
	"\x0fOrderPriceIndex\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\" \n" +
	"\x0eCandidateIndex\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\"\xb2\x01\n" +
	"\fIssueTokenTx\x12#\n" +
	"\x04base\x18\x01 \x01(\v2\x0f.pb.BaseMessageR\x04base\x12\x1d\n" +
	"\n" +
	"token_name\x18\x02 \x01(\tR\ttokenName\x12!\n" +
	"\ftoken_symbol\x18\x03 \x01(\tR\vtokenSymbol\x12!\n" +
	"\ftotal_supply\x18\x04 \x01(\tR\vtotalSupply\x12\x18\n" +
	"\acanMint\x18\x05 \x01(\bR\acanMint\"\x87\x01\n" +
	"\bFreezeTx\x12#\n" +
	"\x04base\x18\x01 \x01(\v2\x0f.pb.BaseMessageR\x04base\x12\x1d\n" +
	"\n" +
	"token_addr\x18\x02 \x01(\tR\ttokenAddr\x12\x1f\n" +
	"\vtarget_addr\x18\x03 \x01(\tR\n" +
	"targetAddr\x12\x16\n" +
	"\x06freeze\x18\x04 \x01(\bR\x06freeze\"\x7f\n" +
	"\vTransaction\x12#\n" +
	"\x04base\x18\x01 \x01(\v2\x0f.pb.BaseMessageR\x04base\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\tR\x02to\x12#\n" +
	"\rtoken_address\x18\x03 \x01(\tR\ftokenAddress\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\tR\x06amount\"\xbc\x02\n" +
	"\aOrderTx\x12#\n" +
	"\x04base\x18\x01 \x01(\v2\x0f.pb.BaseMessageR\x04base\x12\x1d\n" +
	"\n" +
	"base_token\x18\x02 \x01(\tR\tbaseToken\x12\x1f\n" +
	"\vquote_token\x18\x03 \x01(\tR\n" +
	"quoteToken\x12\x1b\n" +
	"\x02op\x18\x04 \x01(\x0e2\v.pb.OrderOpR\x02op\x12 \n" +
	"\fop_target_id\x18\x05 \x01(\tR\n" +
	"opTargetId\x12\x16\n" +
	"\x06amount\x18\x06 \x01(\tR\x06amount\x12\x14\n" +
	"\x05price\x18\a \x01(\tR\x05price\x12\x1f\n" +
	"\vfilled_base\x18\b \x01(\tR\n" +
	"filledBase\x12!\n" +
	"\ffilled_quote\x18\t \x01(\tR\vfilledQuote\x12\x1b\n" +
	"\tis_filled\x18\n" +
	" \x01(\bR\bisFilled\"\x99\x01\n" +
	"\n" +
	"RechargeTx\x12#\n" +
	"\x04base\x18\x01 \x01(\v2\x0f.pb.BaseMessageR\x04base\x12#\n" +
	"\rtoken_address\x18\x02 \x01(\tR\ftokenAddress\x12+\n" +
	"\x11generated_address\x18\x03 \x01(\tR\x10generatedAddress\x12\x14\n" +
	"\x05tweak\x18\x04 \x01(\tR\x05tweak\"\x94\x01\n" +
	"\vCandidateTx\x12#\n" +
	"\x04base\x18\x01 \x01(\v2\x0f.pb.BaseMessageR\x04base\x12\x1b\n" +
	"\x02op\x18\x02 \x01(\x0e2\v.pb.OrderOpR\x02op\x12+\n" +
	"\x11candidate_address\x18\x03 \x01(\tR\x10candidateAddress\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\tR\x06amount\"c\n" +
	"\aMinerTx\x12#\n" +
	"\x04base\x18\x01 \x01(\v2\x0f.pb.BaseMessageR\x04base\x12\x1b\n" +
	"\x02op\x18\x02 \x01(\x0e2\v.pb.OrderOpR\x02op\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\tR\x06amount\"\xe9\x02\n" +
	"\x05AnyTx\x128\n" +
	"\x0eissue_token_tx\x18\x01 \x01(\v2\x10.pb.IssueTokenTxH\x00R\fissueTokenTx\x12+\n" +
	"\tfreeze_tx\x18\x02 \x01(\v2\f.pb.FreezeTxH\x00R\bfreezeTx\x123\n" +
	"\vtransaction\x18\x03 \x01(\v2\x0f.pb.TransactionH\x00R\vtransaction\x12(\n" +
	"\border_tx\x18\x04 \x01(\v2\v.pb.OrderTxH\x00R\aorderTx\x12/\n" +
	"\n" +
	"address_tx\x18\x05 \x01(\v2\x0e.pb.RechargeTxH\x00R\taddressTx\x124\n" +
	"\fcandidate_tx\x18\x06 \x01(\v2\x0f.pb.CandidateTxH\x00R\vcandidateTx\x12(\n" +
	"\bminer_tx\x18\b \x01(\v2\v.pb.MinerTxH\x00R\aminerTxB\t\n" +
	"\acontent\"U\n" +
	"\bNodeInfo\x12\x1d\n" +
	"\n" +
	"public_key\x18\x01 \x01(\tR\tpublicKey\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x1a\n" +
	"\bisOnline\x18\x04 \x01(\bR\bisOnline\".\n" +
	"\bNodeList\x12\"\n" +
	"\x05nodes\x18\x01 \x03(\v2\f.pb.NodeInfoR\x05nodes\"Z\n" +
	"\n" +
	"ClientInfo\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\x12\x16\n" +
	"\x06authed\x18\x02 \x01(\bR\x06authed\x12$\n" +
	"\x0epublic_key_pem\x18\x03 \x01(\tR\fpublicKeyPem\"l\n" +
	"\x10HandshakeRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12\x1d\n" +
	"\n" +
	"public_key\x18\x02 \x01(\tR\tpublicKey\x12\x1c\n" +
	"\tsignature\x18\x03 \x01(\tR\tsignature\"+\n" +
	"\x11HandshakeResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\")\n" +
	"\rStatusRequest\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\"<\n" +
	"\x0eStatusResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x12\n" +
	"\x04info\x18\x02 \x01(\tR\x04info\"8\n" +
	"\aGetData\x12\x13\n" +
	"\x05tx_id\x18\x01 \x01(\tR\x04txId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\")\n" +
	"\x0fGetBlockRequest\x12\x16\n" +
	"\x06height\x18\x01 \x01(\x04R\x06height\"I\n" +
	"\x10GetBlockResponse\x12\x1f\n" +
	"\x05block\x18\x01 \x01(\v2\t.pb.BlockR\x05block\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"U\n" +
	"\x16BatchGetShortTxRequest\x12!\n" +
	"\fshort_hashes\x18\x01 \x03(\fR\vshortHashes\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\"H\n" +
	"\x17BatchGetShortTxResponse\x12-\n" +
	"\ftransactions\x18\x01 \x03(\v2\t.pb.AnyTxR\ftransactions\"\x9f\x01\n" +
	"\x0eCheckPointInfo\x12\x16\n" +
	"\x06height\x18\x01 \x01(\x04R\x06height\x12\x19\n" +
	"\btxs_hash\x18\x02 \x01(\tR\atxsHash\x12/\n" +
	"\x13aggregate_signature\x18\x03 \x01(\fR\x12aggregateSignature\x12\x17\n" +
	"\abit_map\x18\x04 \x01(\fR\x06bitMap\x12\x10\n" +
	"\x03txs\x18\x05 \x01(\fR\x03txs\"\x1a\n" +
	"\x18GetConsensusStateRequest\"\xa6\x02\n" +
	"\tPushQuery\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\rR\trequestId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x1a\n" +
	"\bdeadline\x18\x03 \x01(\x04R\bdeadline\x12,\n" +
	"\x12container_is_block\x18\x04 \x01(\bR\x10containerIsBlock\x12\x1c\n" +
	"\tcontainer\x18\x05 \x01(\fR\tcontainer\x12)\n" +
	"\x10requested_height\x18\x06 \x01(\x04R\x0frequestedHeight\x12\x19\n" +
	"\bblock_id\x18\a \x01(\tR\ablockId\x12\x1c\n" +
	"\tsignature\x18\b \x01(\fR\tsignature\x12\x14\n" +
	"\x05nonce\x18\t \x01(\x04R\x05nonce\"\xa6\x01\n" +
	"\tPullQuery\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\rR\trequestId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x1a\n" +
	"\bdeadline\x18\x03 \x01(\x04R\bdeadline\x12\x19\n" +
	"\bblock_id\x18\x04 \x01(\tR\ablockId\x12)\n" +
	"\x10requested_height\x18\x05 \x01(\x04R\x0frequestedHeight\"\x8c\x02\n" +
	"\x05Chits\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\rR\trequestId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12'\n" +
	"\x0fpreferred_block\x18\x03 \x01(\tR\x0epreferredBlock\x12%\n" +
	"\x0eaccepted_block\x18\x04 \x01(\tR\racceptedBlock\x129\n" +
	"\x19preferred_block_at_height\x18\x05 \x01(\x04R\x16preferredBlockAtHeight\x12'\n" +
	"\x0faccepted_height\x18\x06 \x01(\x04R\x0eacceptedHeight\x12\x16\n" +
	"\x06bitmap\x18\a \x01(\fR\x06bitmap\"\x80\x01\n" +
	"\x0eHeightResponse\x12.\n" +
	"\x12LastAcceptedHeight\x18\x01 \x01(\x04R\x12LastAcceptedHeight\x12$\n" +
	"\rCurrentHeight\x18\x02 \x01(\x04R\rCurrentHeight\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\"0\n" +
	"\x13GetBlockByIDRequest\x12\x19\n" +
	"\bblock_id\x18\x01 \x01(\tR\ablockId*\x1e\n" +
	"\aOrderOp\x12\a\n" +
	"\x03ADD\x10\x00\x12\n" +
	"\n" +
	"\x06REMOVE\x10\x01*.\n" +
	"\x06Status\x12\v\n" +
	"\aPENDING\x10\x00\x12\n" +
	"\n" +
	"\x06FAILED\x10\x01\x12\v\n" +
	"\aSUCCEED\x10\x02B\x17Z\x15awesomeProject1/db;dbb\x06proto3"

var (
	file_pb_data_proto_rawDescOnce sync.Once
	file_pb_data_proto_rawDescData []byte
)

func file_pb_data_proto_rawDescGZIP() []byte {
	file_pb_data_proto_rawDescOnce.Do(func() {
		file_pb_data_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pb_data_proto_rawDesc), len(file_pb_data_proto_rawDesc)))
	})
	return file_pb_data_proto_rawDescData
}

var file_pb_data_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pb_data_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_pb_data_proto_goTypes = []any{
	(OrderOp)(0),                     // 0: pb.OrderOp
	(Status)(0),                      // 1: pb.Status
	(*Token)(nil),                    // 2: pb.Token
	(*TokenRegistry)(nil),            // 3: pb.TokenRegistry
	(*BaseMessage)(nil),              // 4: pb.BaseMessage
	(*Account)(nil),                  // 5: pb.Account
	(*TokenBalance)(nil),             // 6: pb.TokenBalance
	(*Block)(nil),                    // 7: pb.Block
	(*RewordInfo)(nil),               // 8: pb.RewordInfo
	(*OrderPriceIndex)(nil),          // 9: pb.OrderPriceIndex
	(*CandidateIndex)(nil),           // 10: pb.CandidateIndex
	(*IssueTokenTx)(nil),             // 11: pb.IssueTokenTx
	(*FreezeTx)(nil),                 // 12: pb.FreezeTx
	(*Transaction)(nil),              // 13: pb.Transaction
	(*OrderTx)(nil),                  // 14: pb.OrderTx
	(*RechargeTx)(nil),               // 15: pb.RechargeTx
	(*CandidateTx)(nil),              // 16: pb.CandidateTx
	(*MinerTx)(nil),                  // 17: pb.MinerTx
	(*AnyTx)(nil),                    // 18: pb.AnyTx
	(*NodeInfo)(nil),                 // 19: pb.NodeInfo
	(*NodeList)(nil),                 // 20: pb.NodeList
	(*ClientInfo)(nil),               // 21: pb.ClientInfo
	(*HandshakeRequest)(nil),         // 22: pb.HandshakeRequest
	(*HandshakeResponse)(nil),        // 23: pb.HandshakeResponse
	(*StatusRequest)(nil),            // 24: pb.StatusRequest
	(*StatusResponse)(nil),           // 25: pb.StatusResponse
	(*GetData)(nil),                  // 26: pb.GetData
	(*GetBlockRequest)(nil),          // 27: pb.GetBlockRequest
	(*GetBlockResponse)(nil),         // 28: pb.GetBlockResponse
	(*BatchGetShortTxRequest)(nil),   // 29: pb.BatchGetShortTxRequest
	(*BatchGetShortTxResponse)(nil),  // 30: pb.BatchGetShortTxResponse
	(*CheckPointInfo)(nil),           // 31: pb.CheckPointInfo
	(*GetConsensusStateRequest)(nil), // 32: pb.GetConsensusStateRequest
	(*PushQuery)(nil),                // 33: pb.PushQuery
	(*PullQuery)(nil),                // 34: pb.PullQuery
	(*Chits)(nil),                    // 35: pb.Chits
	(*HeightResponse)(nil),           // 36: pb.HeightResponse
	(*GetBlockByIDRequest)(nil),      // 37: pb.GetBlockByIDRequest
	nil,                              // 38: pb.TokenRegistry.TokensEntry
	nil,                              // 39: pb.Account.BalancesEntry
}
var file_pb_data_proto_depIdxs = []int32{
	38, // 0: pb.TokenRegistry.tokens:type_name -> pb.TokenRegistry.TokensEntry
	1,  // 1: pb.BaseMessage.status:type_name -> pb.Status
	39, // 2: pb.Account.balances:type_name -> pb.Account.BalancesEntry
	18, // 3: pb.Block.body:type_name -> pb.AnyTx
	4,  // 4: pb.IssueTokenTx.base:type_name -> pb.BaseMessage
	4,  // 5: pb.FreezeTx.base:type_name -> pb.BaseMessage
	4,  // 6: pb.Transaction.base:type_name -> pb.BaseMessage
	4,  // 7: pb.OrderTx.base:type_name -> pb.BaseMessage
	0,  // 8: pb.OrderTx.op:type_name -> pb.OrderOp
	4,  // 9: pb.RechargeTx.base:type_name -> pb.BaseMessage
	4,  // 10: pb.CandidateTx.base:type_name -> pb.BaseMessage
	0,  // 11: pb.CandidateTx.op:type_name -> pb.OrderOp
	4,  // 12: pb.MinerTx.base:type_name -> pb.BaseMessage
	0,  // 13: pb.MinerTx.op:type_name -> pb.OrderOp
	11, // 14: pb.AnyTx.issue_token_tx:type_name -> pb.IssueTokenTx
	12, // 15: pb.AnyTx.freeze_tx:type_name -> pb.FreezeTx
	13, // 16: pb.AnyTx.transaction:type_name -> pb.Transaction
	14, // 17: pb.AnyTx.order_tx:type_name -> pb.OrderTx
	15, // 18: pb.AnyTx.address_tx:type_name -> pb.RechargeTx
	16, // 19: pb.AnyTx.candidate_tx:type_name -> pb.CandidateTx
	17, // 20: pb.AnyTx.miner_tx:type_name -> pb.MinerTx
	19, // 21: pb.NodeList.nodes:type_name -> pb.NodeInfo
	7,  // 22: pb.GetBlockResponse.block:type_name -> pb.Block
	18, // 23: pb.BatchGetShortTxResponse.transactions:type_name -> pb.AnyTx
	2,  // 24: pb.TokenRegistry.TokensEntry.value:type_name -> pb.Token
	6,  // 25: pb.Account.BalancesEntry.value:type_name -> pb.TokenBalance
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_pb_data_proto_init() }
func file_pb_data_proto_init() {
	if File_pb_data_proto != nil {
		return
	}
	file_pb_data_proto_msgTypes[16].OneofWrappers = []any{
		(*AnyTx_IssueTokenTx)(nil),
		(*AnyTx_FreezeTx)(nil),
		(*AnyTx_Transaction)(nil),
		(*AnyTx_OrderTx)(nil),
		(*AnyTx_AddressTx)(nil),
		(*AnyTx_CandidateTx)(nil),
		(*AnyTx_MinerTx)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pb_data_proto_rawDesc), len(file_pb_data_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_data_proto_goTypes,
		DependencyIndexes: file_pb_data_proto_depIdxs,
		EnumInfos:         file_pb_data_proto_enumTypes,
		MessageInfos:      file_pb_data_proto_msgTypes,
	}.Build()
	File_pb_data_proto = out.File
	file_pb_data_proto_goTypes = nil
	file_pb_data_proto_depIdxs = nil
}
